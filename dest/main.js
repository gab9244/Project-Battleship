(()=>{const e=document.getElementById("body"),t=document.createElement("header");let n=document.createElement("img");n.src="/imagens/bs_logo.46ed26ed.png";const r=document.createElement("form");r.action="#",r.method="get";const d=document.createElement("div");d.setAttribute("id","inputDiv");let c=document.createElement("input");c.type="text",c.required=!0;let o=document.createElement("button");o.textContent="Start Game",o.setAttribute("id","startGame");const a=document.createElement("div");a.setAttribute("id","GamePage");const i=document.createElement("h1"),s=document.createElement("div");s.setAttribute("id","options");const l=document.createElement("button");l.textContent="Flip";const u=document.createElement("button");u.textContent="Start";const m=document.createElement("div");m.setAttribute("id","buttonsContainer"),m.append(l,u);let p=0;l.addEventListener("click",(function(){const e=Array.from(document.querySelectorAll("#options div"));p=0===p?90:0,e.forEach((e=>e.style.transform=`rotate(${p}deg)`))}));const b=document.createElement("div");b.setAttribute("class","carrir-preview"),b.setAttribute("draggable","true");const v=document.createElement("div");v.setAttribute("class","battleship-preview"),v.setAttribute("draggable","true");const E=document.createElement("div");E.setAttribute("class","cruiser-preview"),E.setAttribute("draggable","true");const g=document.createElement("div");g.setAttribute("class","submarine-preview"),g.setAttribute("draggable","true");const h=document.createElement("div");h.setAttribute("class","destroyer-preview"),h.setAttribute("draggable","true"),document.querySelectorAll("#options div").forEach((e=>{e.addEventListener("dragend",(()=>{})),e.addEventListener("dragstart",(e=>{90===p&&(e.style.transform="rotate(90deg)")}))})),s.append(b,v,E,g,h);const y=document.createElement("div");y.setAttribute("id","player"),a.style.display="none";const A=document.createElement("div");A.setAttribute("id","playerDiv"),A.append(i,y,s,m);const f=document.createElement("div");f.setAttribute("id","computer"),o.addEventListener("click",(()=>{c.value.length>1&&(t.style.display="none",a.style.display="flex",i.textContent=c.value)})),function(){for(let e=0;e<100;e++){let t=document.createElement("div");t.setAttribute("id",[e]),document.querySelectorAll("#player div").forEach((e=>{e.addEventListener("dragover",(e=>{e.preventDefault()}))})),y.appendChild(t)}for(const e of y.children)e.addEventListener("click",(()=>{e.style.backgroundColor="red"}))}(),function(){for(let e=0;e<100;e++){let t=document.createElement("div");t.setAttribute("id",[e]),f.appendChild(t)}for(const e of f.children)e.addEventListener("click",(()=>{e.style.backgroundColor="red"}))}(),a.append(A,f),d.appendChild(c),r.append(c,o),t.append(n,d,r),e.append(t,a);class w{constructor(e,t){this.name=e,this.length=t}}function C(e){const t=document.querySelectorAll("#computer div");let n,r=Math.random()<.5,d=Math.floor(100*Math.random()),c=r?d<=100-e.length?d:100-e.length:d<=100-10*e.length?d:d-10*e.length+10,o=[];for(let n=0;n<e.length;n++)r?o.push(t[Number(c)+n]):o.push(t[Number(c)+10*n]);r?o.every(((e,t)=>n=o[0].id%10!=10-(o.length-(t+1)))):o.every(((e,t)=>n=o[0].id<10*t+1+90));const a=o.every((e=>!e.classList.contains("taken")));n&&a?o.forEach((t=>{t.classList.add(e.name),t.classList.add("taken")})):C(e)}[new w("destroyer",2),new w("submarine",3),new w("cruiser",3),new w("battleship",4),new w("carrir",5)].forEach((e=>C(e)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,